clear all
close all
clc
shadowThreshold = input('Enter the minimum ratio from 0 to 1 for a pixel to be flagged as a shadow \n The default is 0.1');
    if isempty(shadowThreshold)
     shadowThreshold = 0.1;
    end
    
pixThreshold = input('Enter the minimum pixel area of a shadow \n The default is 100');
    if isempty(pixThreshold)
     pixThreshold = 100;
    end
azimuth =  input('Enter the azimuth in degrees from the metadata');
sunElevation = input('Enter the sun elevation in degrees from the metadata');
resolution = input('Enter the resolution in metres from the metadata');
nadir = input('Enter the sattelite nadir in degrees from the metadata \n Usually zero for landsat images');
%% Read Images:
im = imread('sample.jpg');
figure, imshow(im);
% NOTE: You might need different median filter size for your test image.
r = medfilt2(double(im(:,:,1)), [3,3]); 
g = medfilt2(double(im(:,:,2)), [3,3]);
b = medfilt2(double(im(:,:,3)), [3,3]);
%% Calculate Shadow Ratio:
shadow_ratio = ((4/pi).*atan(((b-g))./(b+g)));
figure, imshow(shadow_ratio, []); colormap(jet); colorbar;
% NOTE: You might need a different threshold value for your test image.
% You can also consider using automatic threshold estimation methods.
shadow_mask = shadow_ratio>shadowThreshold;
figure, imshow(shadow_mask, []); 
shadow_mask(1:5,:) = 0;
shadow_mask(end-5:end,:) = 0;
shadow_mask(:,1:5) = 0;
shadow_mask(:,end-5:end) = 0;
% NOTE: Depending on the shadow size that you want to consider,
% you can change the area size threshold
shadow_mask = bwareaopen(shadow_mask, pixThreshold);
%cc = bwconncomp(shadow_mask,8);
%number  = cc.NumObjects;

%uncomment this code to use boundary instead of area thingy
%shadow_mask = imdilate(shadow_mask,strel('disk',2))-shadow_mask;
[labeledImage, numberOfObject] = bwlabel(shadow_mask);
disp(numberOfObject);

%array of final centroid, height values
final = [];
for k = 1 : numberOfObject
    thisObject = ismember(labeledImage, k);
    rotatedObject = imrotate(thisObject,-azimuth);
    [x,y] = find(rotatedObject);
    pixLength = abs(max(y)-min(y)+1);
    length = pixLength*resolution;
    height = (tand(90-sunElevation)*length);
    
    %centroid for text
    try
    stats = regionprops(thisObject);
    centroid = stats.Centroid;
    catch
    warning('Centroid missing assigned value of 0');
    centroid = [0,0];
    end
    finalO=[height,centroid];
    final=[final;finalO];
end
imshow(imoverlay(im,shadow_mask,'blue'));
for k = 1 : size(final,1)
    text(final(k,2),final(k,3),string(final(k,1)),'Color','white')
end

%[x,y] = find(imdilate(shadow_mask,strel('disk',2))-shadow_mask);
%figure, imshow(im); hold on,
%plot(y,x,'.b'), title('Shadow Boundaries');
%%

